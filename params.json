{"google":"UA-32923864-1","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Simple Management System for Amazon Elasctic MapReduce","name":"Huahin Emanager","body":"## Huahin EManager\r\n\r\nHuahin EManager is a Simple Management System for Amazon Elasctic MapReduce.\r\nHuahin EManager can get a list of Job Flow, describe Job Flow, do a kill for the step, and Job queue management.\r\nHuahin EManager is optimized to reduce the cost and start the instance.\r\n\r\nHuahin EManager is distributed under Apache License 2.0.\r\n\r\n### Download\r\n[Huahin EManager 0.1.1](http://huahin-framework.googlecode.com/files/huahin-emanager-0.1.1.tar.gz)\r\n<br/>\r\n\r\n### Requirements\r\n```\r\nJava 6+\r\n```\r\n<br/>\r\n\r\n### Install Huahin EManager\r\n```\r\n~ $ tar xzf huahin-emanager-x.x.x.tar.gz\r\n```\r\n<br/>\r\n\r\n### Setup of AWS Security Group\r\nSet the your IP address and port(9010) for the Huahin Manager to the Security Group(ElasticMapReduce-master). For example:\r\n```\r\nPort range: 9010\r\nSource: 1.1.1.1/32\r\n```\r\n<br/>\r\n\r\n### Configure Huahin EManager\r\nEdit the huahin-emanager-x.x.x/conf/huahinEManager.properties file.<br/>\r\nFor example:<br/>\r\n\r\nElastitc MapReduce cluster size. The size of the cluster that start at parallel.(required)\r\n```\r\njob.clusterSize=1\r\n```\r\n\r\nAt the time of shutdown of EManager, specify whether it wait for the end of Job.(required)\r\n```\r\nterminate.jobForWait=true\r\n```\r\n\r\nAWS access key(required)\r\n```\r\nemr.accesskey=XXXXXXXXXXXXXXX\r\n```\r\n\r\nAWS secret key(required)\r\n```\r\nemr.secretkey=YYYYYYYYYYYYYYY\r\n```\r\nRegions and Endpoints.(If not specified, the default of S3 is applied.)<br/>\r\n(http://docs.amazonwebservices.com/general/latest/gr/rande.html)\r\n```\r\ns3.endpoint=s3.amazonaws.com\r\n```\r\n\r\nRegions and Endpoints.(If not specified, the default of EMR is applied.)<br/>\r\n(http://docs.amazonwebservices.com/general/latest/gr/rande.html)\r\n```\r\nemr.endpoint=elasticmapreduce.us-east-1.amazonaws.com\r\n```\r\n\r\nAvailability zone.(If not specified, the default of EMR is applied.)\r\n```\r\nemr.availabilityzone=us-east-1a\r\n```\r\n\r\nAmazon EC2 Key Pair(If not specified, the default of EMR is applied.)\r\n```\r\nemr.keypairname=keyname\r\n```\r\n\r\nHadoop version.(If not specified, the default of EMR is applied.)\r\n```\r\nemr.hadoopversion=1.0.3\r\n```\r\n\r\nInstance count.(required)\r\n```\r\nemr.instancecount=2\r\n```\r\n\r\nMaster Instance Type.(required)\r\n```\r\nemr.masterInstancetype=m2.xlarge\r\n```\r\n\r\nSlave Instance Type.(If not specified, master instance type is applied.)\r\n```\r\nemr.slaveInstancetype=m1.small\r\n```\r\n\r\nTrue means EMR will store an index of your logs (requires an emr.loguri propertie). (required)\r\n```\r\nemr.debug=false\r\n```\r\n\r\nTo copy log files from the job flow to Amazon S3, specify an Amazon S3 bucket.(optional)\r\n```\r\nemr.loguri=s3://loguri/\r\n```\r\n\r\nWhen you change the boot port and shutdown port, edit the huahin-emanager-x.x.x/conf/port and shutdown port file.\r\n\r\n### Start/Stop Huahin EManager\r\nTo start/stop Huahin Manager use Huahin EManager's bin/emanager script. For example:\r\n```\r\n$ bin/emanager start\r\n```\r\n<br/>\r\n\r\n### Test Huahin EManager is working\r\n```\r\n  ~ $ curl -X GET \"http://<HOSTNAME>:9020/jobflow/list\"\r\n[\r\n  {\r\n    \"creationDate\": \"Tue Oct 16 21:02:16 JST 2012\",\r\n    \"endDate\": \"Tue Oct 16 21:10:21 JST 2012\",\r\n    \"jobFlow\": \"j-2R5KLHJORAE0W\",\r\n    \"startDate\": \"Tue Oct 16 21:06:11 JST 2012\",\r\n    \"state\": \"TERMINATED\"\r\n  }\r\n]\r\n```\r\n<br/>\r\n\r\n### Huahin EManager REST Job Flow APIs\r\nGet all job flow list. For example:\r\n```\r\n~ $ curl -X GET \"http://<HOSTNAME>:9020/jobflow/list\"\r\n```\r\n<br/>\r\n\r\nGet running job flow list. For example:\r\n```\r\n~ $ curl -X GET \"http://<HOSTNAME>:9020/jobflow/runnings\"\r\n```\r\n<br/>\r\n\r\nGet describe job flow. \\<JOB FLOW ID\\> specifies the job flow ID.\r\n```\r\n~ $ curl -X GET \"http://<HOSTNAME>:9020/jobflow/describe/<JOB FLOW ID>\"\r\n```\r\nFor example:\r\n```\r\n~ $ curl -X GET \"http://<HOSTNAME>:9020/jobflow/describe/j-XXXXXXXXXX\"\r\n```\r\n<br/>\r\n\r\nKill step for step name. \\<STEP NAME\\> specifies the step name.\r\n```\r\n~ $ curl -X DELETE \"http://<HOSTNAME>:9020/jobflow/kill/step/<STEP NAME>\"\r\n```\r\nFor example:\r\n```\r\n~ $ curl -X DELETE \"http://<HOSTNAME>:9020/jobflow/kill/step/S_XXXXXXXXXXX\"\r\n```\r\n<br/>\r\n\r\n### Huahin EManager REST queue APIs\r\nGet all queue list. For example:\r\n```\r\n~ $ curl -X GET \"http://<HOSTNAME>:9020/queue/list\"\r\n```\r\n<br/>\r\n\r\nGet running queue list. For example:\r\n```\r\n~ $ curl -X GET \"http://<HOSTNAME>:9020/queue/runnings\"\r\n```\r\n<br/>\r\n\r\nGet describe queue \\<STEP NAME\\> specifies the step name.\r\n```\r\n~ $ curl -X GET \"http://<HOSTNAME>:9020/queue/describe/<STEP NAME>\"\r\n```\r\nFor example:\r\n```\r\n~ $ curl -X GET \"http://<HOSTNAME>:9020/queue/describe/S_XXXXXXXXXXX\"\r\n```\r\n<br/>\r\n\r\nKill queue for step name. \\<STEP NAME\\> specifies the step name.\r\n```\r\n~ $ curl -X DELETE \"http://<HOSTNAME>:9020/queue/kill/<STEP NAME>\"\r\n```\r\nFor example:\r\n```\r\n~ $ curl -X DELETE \"http://<HOSTNAME>:9020/queue/kill/S_XXXXXXXXXXX\"\r\n```\r\n<br/>\r\n\r\n#### Register job\r\nSpecifies of all ARGUMENTS is JSON.\r\nPUT method is specifies the scripts or jar on the S3.\r\nPOST method upload the scripts or jar to S3.\r\n\r\n##### Register Hive and Pig job\r\n* PUT method\r\n  * Required ARGUMENTS\r\n    * script\r\n* POST method\r\n  * Required SCRIPT\r\n  * Required ARGUMENTS\r\n    * script\r\n\r\nFor PUT Hive example:\r\n```\r\n~ $ curl -X PUT http://localhost:9020/queue/register/hive \\\r\n    -F ARGUMENTS='{\"script\":\"s3://huahin/wordcount.hql\",\"arguments\":[\"arg1\",\"arg2\"]}'\r\n```\r\n<br/>\r\n\r\nFor PUT Pig example:\r\n```\r\n~ $ curl -X PUT http://localhost:9020/queue/register/pig \\\r\n    -F ARGUMENTS='{\"script\":\"s3://huahin/wordcount.pig\",\"arguments\":[\"arg1\",\"arg2\"]}'\r\n```\r\n<br/>\r\n\r\nFor POST Hive example:\r\n```\r\n~ $ curl -X POST http://localhost:9020/queue/register/hive\r\n    -F SCRIPT=@wordcount.hql \\\r\n    -F ARGUMENTS='{\"script\":\"s3://huahin/wordcount.hql\",\"arguments\":[\"arg1\",\"arg2\"]}'\r\n```\r\n<br/>\r\n\r\nFor POST Pig example:\r\n```\r\n~ $ curl -X POST http://localhost:9020/queue/register/pig\r\n    -F SCRIPT=@wordcount.pig \\\r\n    -F ARGUMENTS='{\"script\":\"s3://huahin/wordcount.pig\",\"arguments\":[\"arg1\",\"arg2\"]}'\r\n```\r\n<br/>\r\n\r\nIf deleteOnExit of arguments is true, the script is deleted after execution.<br/>\r\nFor POST Hive example:\r\n```\r\n~ $ curl -X POST http://localhost:9020/queue/register/hive\r\n    -F SCRIPT=@wordcount.hql \\\r\n    -F ARGUMENTS='{\"script\":\"s3://huahin/wordcount.hql\",\"arguments\":[\"arg1\",\"arg2\"], \"deleteOnExit\":\"true\"}'\r\n```\r\n<br/>\r\n\r\n##### Register Streaming job\r\n* PUT method\r\n  * Required ARGUMENTS\r\n    * input, output, mapper, reducer\r\n* POST method\r\n  * Required MAPPER\r\n  * Required REDUCER\r\n  * Required ARGUMENTS\r\n    * input, output, mapper, reducer\r\n\r\nFor PUT example:\r\n```\r\n~ $ curl -X PUT http://localhost:9020/queue/register/streaming \\\r\n    -F ARGUMENTS='{\"input\":\"s3://input/\",\"output\":\"s3://output/\",\"mapper\":\"s3://huahin/map.py\",\"reducer\":\"s3://huahin/reduce.py\"}'\r\n```\r\n<br/>\r\n\r\nFor POST example:\r\n```\r\n~ $ curl -X POST http://localhost:9020/queue/register/streaming \\\r\n    -F MAPPER=@map.py \\\r\n    -F REDUCER=@reduce.py \\\r\n    -F ARGUMENTS='{\"input\":\"s3://input/\",\"output\":\"s3://output/\",\"mapper\":\"s3://huahin/map.py\",\"reducer\":\"s3://huahin/reduce.py\"}'\r\n```\r\n<br/>\r\n\r\nIf deleteOnExit of arguments is true, the script is deleted after execution.<br/>\r\nFor POST Pig example:\r\n```\r\n~ $ curl -X POST http://localhost:9020/queue/register/streaming \\\r\n    -F MAPPER=@map.py \\\r\n    -F REDUCER=@reduce.py \\\r\n    -F ARGUMENTS='{\"input\":\"s3://input/\",\"output\":\"s3://output/\",\"mapper\":\"s3://huahin/map.py\",\"reducer\":\"s3://huahin/reduce.py\", \"deleteOnExit\":\"true\"}'\r\n```\r\n<br/>\r\n\r\n##### Register custom jar job\r\n* PUT method\r\n  * Required ARGUMENTS\r\n    * jar\r\n* POST method\r\n  * Required JAR\r\n  * Required ARGUMENTS\r\n    * jar\r\n\r\nFor PUT example:\r\n```\r\n~ $ curl -X PUT http://localhost:9020/queue/register/customjar \\\r\n    -F ARGUMENTS='{\"jar\":\"s3://huahin/wordcount.jar\",\"arguments\":[\"s3://huahin/input/\",\"-o\",\"s3://huahin/output/\"]}'\r\n```\r\n<br/>\r\n\r\nFor POST example:\r\n```\r\n~ $ curl -X POST http://localhost:9020/queue/register/customjar \\\r\n    -F JAR=@wordcount.jar \\\r\n    -F ARGUMENTS='{\"jar\":\"s3://huahin/wordcount.jar\",\"arguments\":[\"s3://huahin/input/\",\"-o\",\"s3://huahin/output/\"]}'\r\n```\r\n<br/>\r\n\r\nIf deleteOnExit of arguments is true, the script is deleted after execution.<br/>\r\nFor POST Pig example:\r\n```\r\n~ $ curl -X POST http://localhost:9020/queue/register/customjar \\\r\n    -F JAR=@wordcount.jar \\\r\n    -F ARGUMENTS='{\"jar\":\"s3://huahin/wordcount.jar\",\"arguments\":[\"s3://huahin/input/\",\"-o\",\"s3://huahin/output/\", \"deleteOnExit\":\"true\"}'\r\n```\r\n<br/>\r\n\r\n### Support or Contact\r\nContact huahin-framework@googlegroups.com and weâ€™ll help you sort it out."}